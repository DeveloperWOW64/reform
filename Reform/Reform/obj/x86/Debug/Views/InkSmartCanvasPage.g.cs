#pragma checksum "D:\Repositories\DeveloperWOW64\reform\Reform\Reform\Views\InkSmartCanvasPage.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "F4D8DEC05A10FF7D940F13EDD36D66CFDEB1BEE2BE9843DF8844294F3C111933"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Reform.Views
{
    partial class InkSmartCanvasPage : 
        global::Windows.UI.Xaml.Controls.Page, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Windows_UI_Xaml_Controls_Control_IsEnabled(global::Windows.UI.Xaml.Controls.Control obj, global::System.Boolean value)
            {
                obj.IsEnabled = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class InkSmartCanvasPage_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IInkSmartCanvasPage_Bindings
        {
            private global::Reform.Views.InkSmartCanvasPage dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.AppBarButton obj18;
            private global::Windows.UI.Xaml.Controls.AppBarButton obj19;
            private global::Windows.UI.Xaml.Controls.AppBarButton obj20;
            private global::Windows.UI.Xaml.Controls.AppBarButton obj22;
            private global::Windows.UI.Xaml.Controls.AppBarButton obj23;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj18IsEnabledDisabled = false;
            private static bool isobj19IsEnabledDisabled = false;
            private static bool isobj20IsEnabledDisabled = false;
            private static bool isobj22IsEnabledDisabled = false;
            private static bool isobj23IsEnabledDisabled = false;

            private InkSmartCanvasPage_obj1_BindingsTracking bindingsTracking;

            public InkSmartCanvasPage_obj1_Bindings()
            {
                this.bindingsTracking = new InkSmartCanvasPage_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 173 && columnNumber == 120)
                {
                    isobj18IsEnabledDisabled = true;
                }
                else if (lineNumber == 178 && columnNumber == 96)
                {
                    isobj19IsEnabledDisabled = true;
                }
                else if (lineNumber == 179 && columnNumber == 96)
                {
                    isobj20IsEnabledDisabled = true;
                }
                else if (lineNumber == 182 && columnNumber == 110)
                {
                    isobj22IsEnabledDisabled = true;
                }
                else if (lineNumber == 184 && columnNumber == 106)
                {
                    isobj23IsEnabledDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 18: // Views\InkSmartCanvasPage.xaml line 173
                        this.obj18 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        break;
                    case 19: // Views\InkSmartCanvasPage.xaml line 178
                        this.obj19 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        break;
                    case 20: // Views\InkSmartCanvasPage.xaml line 179
                        this.obj20 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        break;
                    case 22: // Views\InkSmartCanvasPage.xaml line 182
                        this.obj22 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        break;
                    case 23: // Views\InkSmartCanvasPage.xaml line 184
                        this.obj23 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        break;
                    default:
                        break;
                }
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // IInkSmartCanvasPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::Reform.Views.InkSmartCanvasPage)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::Reform.Views.InkSmartCanvasPage obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_TransformTextAndShapesButtonIsEnabled(obj.TransformTextAndShapesButtonIsEnabled, phase);
                        this.Update_UndoButtonIsEnabled(obj.UndoButtonIsEnabled, phase);
                        this.Update_RedoButtonIsEnabled(obj.RedoButtonIsEnabled, phase);
                        this.Update_SaveInkFileButtonIsEnabled(obj.SaveInkFileButtonIsEnabled, phase);
                        this.Update_ClearAllButtonIsEnabled(obj.ClearAllButtonIsEnabled, phase);
                    }
                }
            }
            private void Update_TransformTextAndShapesButtonIsEnabled(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\InkSmartCanvasPage.xaml line 173
                    if (!isobj18IsEnabledDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_IsEnabled(this.obj18, obj);
                    }
                }
            }
            private void Update_UndoButtonIsEnabled(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\InkSmartCanvasPage.xaml line 178
                    if (!isobj19IsEnabledDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_IsEnabled(this.obj19, obj);
                    }
                }
            }
            private void Update_RedoButtonIsEnabled(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\InkSmartCanvasPage.xaml line 179
                    if (!isobj20IsEnabledDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_IsEnabled(this.obj20, obj);
                    }
                }
            }
            private void Update_SaveInkFileButtonIsEnabled(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\InkSmartCanvasPage.xaml line 182
                    if (!isobj22IsEnabledDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_IsEnabled(this.obj22, obj);
                    }
                }
            }
            private void Update_ClearAllButtonIsEnabled(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\InkSmartCanvasPage.xaml line 184
                    if (!isobj23IsEnabledDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_IsEnabled(this.obj23, obj);
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class InkSmartCanvasPage_obj1_BindingsTracking
            {
                private global::System.WeakReference<InkSmartCanvasPage_obj1_Bindings> weakRefToBindingObj; 

                public InkSmartCanvasPage_obj1_BindingsTracking(InkSmartCanvasPage_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<InkSmartCanvasPage_obj1_Bindings>(obj);
                }

                public InkSmartCanvasPage_obj1_Bindings TryGetBindingObject()
                {
                    InkSmartCanvasPage_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                }

                public void PropertyChanged_(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    InkSmartCanvasPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Reform.Views.InkSmartCanvasPage obj = sender as global::Reform.Views.InkSmartCanvasPage;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_TransformTextAndShapesButtonIsEnabled(obj.TransformTextAndShapesButtonIsEnabled, DATA_CHANGED);
                                bindings.Update_UndoButtonIsEnabled(obj.UndoButtonIsEnabled, DATA_CHANGED);
                                bindings.Update_RedoButtonIsEnabled(obj.RedoButtonIsEnabled, DATA_CHANGED);
                                bindings.Update_SaveInkFileButtonIsEnabled(obj.SaveInkFileButtonIsEnabled, DATA_CHANGED);
                                bindings.Update_ClearAllButtonIsEnabled(obj.ClearAllButtonIsEnabled, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "TransformTextAndShapesButtonIsEnabled":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_TransformTextAndShapesButtonIsEnabled(obj.TransformTextAndShapesButtonIsEnabled, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "UndoButtonIsEnabled":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_UndoButtonIsEnabled(obj.UndoButtonIsEnabled, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "RedoButtonIsEnabled":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_RedoButtonIsEnabled(obj.RedoButtonIsEnabled, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SaveInkFileButtonIsEnabled":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_SaveInkFileButtonIsEnabled(obj.SaveInkFileButtonIsEnabled, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "ClearAllButtonIsEnabled":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ClearAllButtonIsEnabled(obj.ClearAllButtonIsEnabled, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void UpdateChildListeners_(global::Reform.Views.InkSmartCanvasPage obj)
                {
                    InkSmartCanvasPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        if (bindings.dataRoot != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)bindings.dataRoot).PropertyChanged -= PropertyChanged_;
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_;
                        }
                    }
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2: // Views\InkSmartCanvasPage.xaml line 100
                {
                    global::Windows.UI.Xaml.Controls.InkToolbar element2 = (global::Windows.UI.Xaml.Controls.InkToolbar)(target);
                    ((global::Windows.UI.Xaml.Controls.InkToolbar)element2).Loaded += this.OnInkToolbarLoaded;
                }
                break;
            case 4: // Views\InkSmartCanvasPage.xaml line 13
                {
                    global::Windows.UI.Xaml.Controls.InkToolbar element4 = (global::Windows.UI.Xaml.Controls.InkToolbar)(target);
                    ((global::Windows.UI.Xaml.Controls.InkToolbar)element4).Loaded += this.OnInkToolbarLoaded;
                }
                break;
            case 6: // Views\InkSmartCanvasPage.xaml line 49
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element6 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element6).Click += this.TransformTextAndShapes_Click;
                }
                break;
            case 7: // Views\InkSmartCanvasPage.xaml line 59
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element7 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element7).Click += this.Undo_Click;
                }
                break;
            case 8: // Views\InkSmartCanvasPage.xaml line 66
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element8 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element8).Click += this.Redo_Click;
                }
                break;
            case 9: // Views\InkSmartCanvasPage.xaml line 74
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element9 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element9).Click += this.LoadInkFile_Click;
                }
                break;
            case 10: // Views\InkSmartCanvasPage.xaml line 80
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element10 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element10).Click += this.SaveInkFile_Click;
                }
                break;
            case 11: // Views\InkSmartCanvasPage.xaml line 88
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element11 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element11).Click += this.ClearAll_Click;
                }
                break;
            case 12: // Views\InkSmartCanvasPage.xaml line 129
                {
                    this.ContentArea = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 13: // Views\InkSmartCanvasPage.xaml line 131
                {
                    this.visualStateGroup = (global::Windows.UI.Xaml.VisualStateGroup)(target);
                    ((global::Windows.UI.Xaml.VisualStateGroup)this.visualStateGroup).CurrentStateChanged += this.VisualStateGroup_CurrentStateChanged;
                }
                break;
            case 14: // Views\InkSmartCanvasPage.xaml line 132
                {
                    this.SmallVisualState = (global::Windows.UI.Xaml.VisualState)(target);
                }
                break;
            case 15: // Views\InkSmartCanvasPage.xaml line 137
                {
                    this.BigVisualState = (global::Windows.UI.Xaml.VisualState)(target);
                }
                break;
            case 16: // Views\InkSmartCanvasPage.xaml line 148
                {
                    this.canvasScroll = (global::Windows.UI.Xaml.Controls.ScrollViewer)(target);
                }
                break;
            case 17: // Views\InkSmartCanvasPage.xaml line 168
                {
                    this.bottomCommandBar = (global::Windows.UI.Xaml.Controls.CommandBar)(target);
                }
                break;
            case 18: // Views\InkSmartCanvasPage.xaml line 173
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element18 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element18).Click += this.TransformTextAndShapes_Click;
                }
                break;
            case 19: // Views\InkSmartCanvasPage.xaml line 178
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element19 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element19).Click += this.Undo_Click;
                }
                break;
            case 20: // Views\InkSmartCanvasPage.xaml line 179
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element20 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element20).Click += this.Redo_Click;
                }
                break;
            case 21: // Views\InkSmartCanvasPage.xaml line 181
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element21 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element21).Click += this.LoadInkFile_Click;
                }
                break;
            case 22: // Views\InkSmartCanvasPage.xaml line 182
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element22 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element22).Click += this.SaveInkFile_Click;
                }
                break;
            case 23: // Views\InkSmartCanvasPage.xaml line 184
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element23 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element23).Click += this.ClearAll_Click;
                }
                break;
            case 24: // Views\InkSmartCanvasPage.xaml line 157
                {
                    this.inkCanvas = (global::Windows.UI.Xaml.Controls.InkCanvas)(target);
                }
                break;
            case 25: // Views\InkSmartCanvasPage.xaml line 160
                {
                    this.drawingCanvas = (global::Windows.UI.Xaml.Controls.Canvas)(target);
                }
                break;
            case 26: // Views\InkSmartCanvasPage.xaml line 163
                {
                    this.selectionCanvas = (global::Windows.UI.Xaml.Controls.Canvas)(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Views\InkSmartCanvasPage.xaml line 1
                {                    
                    global::Windows.UI.Xaml.Controls.Page element1 = (global::Windows.UI.Xaml.Controls.Page)target;
                    InkSmartCanvasPage_obj1_Bindings bindings = new InkSmartCanvasPage_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

